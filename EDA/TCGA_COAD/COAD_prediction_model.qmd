---
title: 'Colon Adenocarcinoma (COAD) EDA: Build phenotype prediction model'
author: "Sehyun Oh"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14pxs
        toc: true
        top-depth: 3
output: html_document
---

# Initial Setup
## Load packages
```{r packages, warning=FALSE, message=FALSE}
suppressPackageStartupMessages({
    library(tidyverse)
    library(caret)
    library(pROC)
})
```

## Load data
```{r}
## Sample scores for the train set (80% of the randomly selected COAD samples)
## Only the top 15 validated RAVs
sampleScore_sub <- read.csv("data/sampleScore_train.csv", row.names = 1) # 261 samples x 15 RAVs

## Training set's metadata: character variables
charTb <- read.csv("data/meta_train_char.csv", row.names = 1) # 261 samples x 182 metadata attributes (char)

## All the metadata for training data with >10% completeness (for color)
meta_train <- read.csv("data/meta_train_all.csv", row.names = 1) # 261 samples x 869 metadata attributes (>10% complete)

## Convert character variables into the `factor` data type
factorTb <- charTb
factorTb[sapply(factorTb, is.character)] <- lapply(factorTb[sapply(factorTb, is.character)], factor)
```

## Custom functions
```{r}
source("R/evaluateRFmodel.R")
```

# Prediction models
## Use top 15 validated RAVs for TCGA-COAD
```{r}
validated_RAVs <- c("RAV61", "RAV188", "RAV192", "RAV220", "RAV324", 
                    "RAV517", "RAV579", "RAV832", "RAV833", "RAV834", 
                    "RAV868", "RAV1008", "RAV1166", "RAV1302", "RAV1575")
target_attr <- "patient.microsatellite_instability"

labels <- factorTb[[target_attr]]
nonNALabels <- which(!is.na(labels))
data <- sampleScore_sub[,validated_RAVs]

train_data <- data[nonNALabels,]
train_labels <- labels[nonNALabels]
```

## Random Forest classification model
```{r}
set.seed(1234)
evaluateRFmodel(data = t(train_data), labels = train_labels, aucOnly = TRUE)
```

# Single RAV
```{r}
## Only RA834
dat <- t(train_data)["RAV832",,drop=FALSE]
set.seed(1234)
evaluateRFmodel(data = dat, labels = train_labels, aucOnly = TRUE)
```


# Iterate
```{r}
library(caret)
library(pROC)
library(combinat)  # For combination generation

## All 15 validated RAVs
all_vars <- validated_RAVs

## Create the summary table
source("R/leaveOneSummary.R")
set.seed(1234)
summary_table1 <- leaveOneSummary(t(train_data), train_labels, all_vars)
summary_table1

## Write the summary table to a CSV file
fname <- paste0("combination_of_", length(all_vars)-1,"_summary.csv")
write.csv(summary_table1, 
          file.path("data/RF_res", fname), 
          row.names = FALSE)
```

```{r}
ggplot(summary_table, aes(as.factor(Removed_Variable), Mean_AUC)) + 
    geom_point() + 
    labs(y = "Mean AUC", x = "Removed RAV")
```

```{r}
remove_RAV <- summary_table$Removed_Variable[which.min(summary_table$Mean_AUC)]
train_data_sub <- train_data %>% select(!remove_RAV)

set.seed(1234)
summary_table_2 <- leaveOneSummary(t(train_data_sub), train_labels, 
                                 all_vars[all_vars != remove_RAV])
summary_table_2

## Write the summary table to a CSV file
write.csv(summary_table_2, 
          "data/RF_res/combination_of_13_summary.csv", 
          row.names = FALSE)
```

